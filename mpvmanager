#!/usr/bin/sh

command=$1

helpf() {
  echo "Usage: $0 <command>"
  echo ""
  echo "Commands:"
  echo "   help - Print this help message."
  echo "   pull - Fetch all scripts unconditionally, even if they are downloaded."
  echo "   sync - Featch only missing scripts."
  exit 1
}

# Get the options
case "$command" in
  pull) ;;
  sync) ;;
  help) helpf ;;
  hlep) helpf ;; # option for disabled like me
  *) helpf ;;
esac

# 1st arg - user script name
# 2nd arg - type of file: script / module / options
# 3rd arg - url
get() {
  case $2 in
    script) prefix=./scripts ;;
    module) prefix=./script-modules ;;
    options) prefix=./script-opts ;;
    shader) prefix=./shaders ;;
  esac

  ! test -e "$prefix" && mkdir "$prefix"

  if [ "$2" = options ]; then
    # if conf files exist don't overrite them, but get them on fresh install
    config_exists "$1" && return
  fi

  # get subsctring after last '/' in url string (ie. M-x.lua) - filename
  file=$(expr "$3" : '^.*/\(.*\)$')

  # when 'sync' argument is given skip over all scripts that are installed
  # and download only missing
  [ "$command" = sync ] && [ -f "$prefix/$file" ] && return

  # N to enable timestamping (for file overwrite)
  wget -qN -P "$prefix" "$3"

  wget_exit_status=$?

  if [ $wget_exit_status -ne 0 ]; then
    echo "$1 $2 download failed with exit status $wget_exit_status, please check & update url"
  else
    echo "$1 $2 downloaded successfuly"
  fi

}

config_exists() {
  test -e "./script-opts/$1.conf"
}

. sources
